{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/pages/HomePage/HomePage.tsx","components/pages/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","text","to","className","isActive","classNames","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","slug","sex","PeopleTable","isLoading","people","personSlug","isError","map","born","died","motherName","fatherName","mother","find","women","father","man","undefined","length","PeoplePage","useState","setPeople","setIsLoading","setIsError","useParams","useEffect","getPeopleAsync","data","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.733bc6ca.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  text: string;\n  to: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ text, to }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link to={`../${slug}`} className={classNames({ 'has-text-danger': sex === 'f' })}>\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  isLoading: boolean,\n  isError: boolean,\n  personSlug: string,\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({\n  isLoading,\n  people,\n  personSlug,\n  isError,\n}) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading\n          ? <Loader />\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => {\n                  const {\n                    sex, born, died, motherName, fatherName, slug,\n                  } = person;\n\n                  const mother = people.find(women => {\n                    return motherName === women.name;\n                  });\n                  const father = people.find(man => fatherName === man.name);\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={slug}\n                      className={classNames(\n                        { 'has-background-warning': personSlug === slug },\n                      )}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n                      <td>\n                        {mother?.slug === undefined\n                          ? (\n                            motherName || '-'\n                          )\n                          : (\n                            <PersonLink person={mother} />\n                          )}\n\n                      </td>\n                      <td>\n                        {father?.slug === undefined\n                          ? (\n                            fatherName || '-'\n                          )\n                          : (\n                            <Link to={`../${father?.slug}`}>\n                              {fatherName || '-'}\n                            </Link>\n                          )}\n\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!isLoading && !people.length\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../../api';\nimport { Person } from '../../../types';\nimport { PeopleTable } from '../../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const { personSlug = '' } = useParams();\n\n  useEffect(() => {\n    const getPeopleAsync = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getPeople();\n\n        setPeople(data);\n      } catch (_) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPeopleAsync();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable\n        people={people}\n        isLoading={isLoading}\n        isError={isError}\n        personSlug={personSlug}\n      />\n    </>\n  );\n};\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PageNavLink } from './components/PageNavLink/PageNavLink';\nimport { HomePage } from './components/pages/HomePage/HomePage';\nimport { NotFoundPage } from './components/pages/NotFoundPage/NotFoundPage';\nimport { PeoplePage } from './components/pages/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}